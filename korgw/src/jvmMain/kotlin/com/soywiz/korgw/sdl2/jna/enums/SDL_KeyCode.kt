@file:Suppress("unused", "EnumEntryName", "ClassName")

package com.soywiz.korgw.sdl2.jna.enums

enum class SDL_KeyCode(val value: Int) {
    UNKNOWN(0),

    RETURN('\r'.code),
    ESCAPE(27),
    BACKSPACE('\b'.code),
    TAB('\t'.code),
    SPACE(' '.code),
    EXCLAIM('!'.code),
    QUOTEDBL('"'.code),
    HASH('#'.code),
    PERCENT('%'.code),
    DOLLAR('$'.code),
    AMPERSAND('&'.code),
    QUOTE('\''.code),
    LEFTPAREN('('.code),
    RIGHTPAREN(')'.code),
    ASTERISK('*'.code),
    PLUS('+'.code),
    COMMA(','.code),
    MINUS('-'.code),
    PERIOD('.'.code),
    SLASH('/'.code),
    ZERO('0'.code),
    ONE('1'.code),
    TWO('2'.code),
    THREE('3'.code),
    FOUR('4'.code),
    FIVE('5'.code),
    SIX('6'.code),
    SEVEN('7'.code),
    EIGHT('8'.code),
    NINE('9'.code),
    COLON(':'.code),
    SEMICOLON(';'.code),
    LESS('<'.code),
    EQUALS('='.code),
    GREATER('>'.code),
    QUESTION('?'.code),
    AT('@'.code),

    LEFTBRACKET('['.code),
    BACKSLASH('\\'.code),
    RIGHTBRACKET(']'.code),
    CARET('^'.code),
    UNDERSCORE('_'.code),
    BACKQUOTE('`'.code),
    a('a'.code),
    b('b'.code),
    c('c'.code),
    d('d'.code),
    e('e'.code),
    f('f'.code),
    g('g'.code),
    h('h'.code),
    i('i'.code),
    j('j'.code),
    k('k'.code),
    l('l'.code),
    m('m'.code),
    n('n'.code),
    o('o'.code),
    p('p'.code),
    q('q'.code),
    r('r'.code),
    s('s'.code),
    t('t'.code),
    u('u'.code),
    v('v'.code),
    w('w'.code),
    x('x'.code),
    y('y'.code),
    z('z'.code),

    CAPSLOCK(SDL_Scancode.CAPSLOCK.keycode),

    F1(SDL_Scancode.F1.keycode),
    F2(SDL_Scancode.F2.keycode),
    F3(SDL_Scancode.F3.keycode),
    F4(SDL_Scancode.F4.keycode),
    F5(SDL_Scancode.F5.keycode),
    F6(SDL_Scancode.F6.keycode),
    F7(SDL_Scancode.F7.keycode),
    F8(SDL_Scancode.F8.keycode),
    F9(SDL_Scancode.F9.keycode),
    F10(SDL_Scancode.F10.keycode),
    F11(SDL_Scancode.F11.keycode),
    F12(SDL_Scancode.F12.keycode),

    PRINTSCREEN(SDL_Scancode.PRINTSCREEN.keycode),
    SCROLLLOCK(SDL_Scancode.SCROLLLOCK.keycode),
    PAUSE(SDL_Scancode.PAUSE.keycode),
    INSERT(SDL_Scancode.INSERT.keycode),
    HOME(SDL_Scancode.HOME.keycode),
    PAGEUP(SDL_Scancode.PAGEUP.keycode),
    DELETE(127),
    END(SDL_Scancode.END.keycode),
    PAGEDOWN(SDL_Scancode.PAGEDOWN.keycode),
    RIGHT(SDL_Scancode.RIGHT.keycode),
    LEFT(SDL_Scancode.LEFT.keycode),
    DOWN(SDL_Scancode.DOWN.keycode),
    UP(SDL_Scancode.UP.keycode),

    NUMLOCKCLEAR(SDL_Scancode.NUMLOCKCLEAR.keycode),
    KP_DIVIDE(SDL_Scancode.KP_DIVIDE.keycode),
    KP_MULTIPLY(SDL_Scancode.KP_MULTIPLY.keycode),
    KP_MINUS(SDL_Scancode.KP_MINUS.keycode),
    KP_PLUS(SDL_Scancode.KP_PLUS.keycode),
    KP_ENTER(SDL_Scancode.KP_ENTER.keycode),
    KP_1(SDL_Scancode.KP_1.keycode),
    KP_2(SDL_Scancode.KP_2.keycode),
    KP_3(SDL_Scancode.KP_3.keycode),
    KP_4(SDL_Scancode.KP_4.keycode),
    KP_5(SDL_Scancode.KP_5.keycode),
    KP_6(SDL_Scancode.KP_6.keycode),
    KP_7(SDL_Scancode.KP_7.keycode),
    KP_8(SDL_Scancode.KP_8.keycode),
    KP_9(SDL_Scancode.KP_9.keycode),
    KP_0(SDL_Scancode.KP_0.keycode),
    KP_PERIOD(SDL_Scancode.KP_PERIOD.keycode),

    APPLICATION(SDL_Scancode.APPLICATION.keycode),
    POWER(SDL_Scancode.POWER.keycode),
    KP_EQUALS(SDL_Scancode.KP_EQUALS.keycode),
    F13(SDL_Scancode.F13.keycode),
    F14(SDL_Scancode.F14.keycode),
    F15(SDL_Scancode.F15.keycode),
    F16(SDL_Scancode.F16.keycode),
    F17(SDL_Scancode.F17.keycode),
    F18(SDL_Scancode.F18.keycode),
    F19(SDL_Scancode.F19.keycode),
    F20(SDL_Scancode.F20.keycode),
    F21(SDL_Scancode.F21.keycode),
    F22(SDL_Scancode.F22.keycode),
    F23(SDL_Scancode.F23.keycode),
    F24(SDL_Scancode.F24.keycode),
    EXECUTE(SDL_Scancode.EXECUTE.keycode),
    HELP(SDL_Scancode.HELP.keycode),
    MENU(SDL_Scancode.MENU.keycode),
    SELECT(SDL_Scancode.SELECT.keycode),
    STOP(SDL_Scancode.STOP.keycode),
    AGAIN(SDL_Scancode.AGAIN.keycode),
    UNDO(SDL_Scancode.UNDO.keycode),
    CUT(SDL_Scancode.CUT.keycode),
    COPY(SDL_Scancode.COPY.keycode),
    PASTE(SDL_Scancode.PASTE.keycode),
    FIND(SDL_Scancode.FIND.keycode),
    MUTE(SDL_Scancode.MUTE.keycode),
    VOLUMEUP(SDL_Scancode.VOLUMEUP.keycode),
    VOLUMEDOWN(SDL_Scancode.VOLUMEDOWN.keycode),
    KP_COMMA(SDL_Scancode.KP_COMMA.keycode),
    KP_EQUALSAS400(SDL_Scancode.KP_EQUALSAS400.keycode),

    ALTERASE(SDL_Scancode.ALTERASE.keycode),
    SYSREQ(SDL_Scancode.SYSREQ.keycode),
    CANCEL(SDL_Scancode.CANCEL.keycode),
    CLEAR(SDL_Scancode.CLEAR.keycode),
    PRIOR(SDL_Scancode.PRIOR.keycode),
    RETURN2(SDL_Scancode.RETURN2.keycode),
    SEPARATOR(SDL_Scancode.SEPARATOR.keycode),
    OUT(SDL_Scancode.OUT.keycode),
    OPER(SDL_Scancode.OPER.keycode),
    CLEARAGAIN(SDL_Scancode.CLEARAGAIN.keycode),
    CRSEL(SDL_Scancode.CRSEL.keycode),
    EXSEL(SDL_Scancode.EXSEL.keycode),

    KP_00(SDL_Scancode.KP_00.keycode),
    KP_000(SDL_Scancode.KP_000.keycode),
    THOUSANDSSEPARATOR(SDL_Scancode.THOUSANDSSEPARATOR.keycode),
    DECIMALSEPARATOR(SDL_Scancode.DECIMALSEPARATOR.keycode),
    CURRENCYUNIT(SDL_Scancode.CURRENCYUNIT.keycode),
    CURRENCYSUBUNIT(SDL_Scancode.CURRENCYSUBUNIT.keycode),
    KP_LEFTPAREN(SDL_Scancode.KP_LEFTPAREN.keycode),
    KP_RIGHTPAREN(SDL_Scancode.KP_RIGHTPAREN.keycode),
    KP_LEFTBRACE(SDL_Scancode.KP_LEFTBRACE.keycode),
    KP_RIGHTBRACE(SDL_Scancode.KP_RIGHTBRACE.keycode),
    KP_TAB(SDL_Scancode.KP_TAB.keycode),
    KP_BACKSPACE(SDL_Scancode.KP_BACKSPACE.keycode),
    KP_A(SDL_Scancode.KP_A.keycode),
    KP_B(SDL_Scancode.KP_B.keycode),
    KP_C(SDL_Scancode.KP_C.keycode),
    KP_D(SDL_Scancode.KP_D.keycode),
    KP_E(SDL_Scancode.KP_E.keycode),
    KP_F(SDL_Scancode.KP_F.keycode),
    KP_XOR(SDL_Scancode.KP_XOR.keycode),
    KP_POWER(SDL_Scancode.KP_POWER.keycode),
    KP_PERCENT(SDL_Scancode.KP_PERCENT.keycode),
    KP_LESS(SDL_Scancode.KP_LESS.keycode),
    KP_GREATER(SDL_Scancode.KP_GREATER.keycode),
    KP_AMPERSAND(SDL_Scancode.KP_AMPERSAND.keycode),
    KP_DBLAMPERSAND(SDL_Scancode.KP_DBLAMPERSAND.keycode),
    KP_VERTICALBAR(SDL_Scancode.KP_VERTICALBAR.keycode),
    KP_DBLVERTICALBAR(SDL_Scancode.KP_DBLVERTICALBAR.keycode),
    KP_COLON(SDL_Scancode.KP_COLON.keycode),
    KP_HASH(SDL_Scancode.KP_HASH.keycode),
    KP_SPACE(SDL_Scancode.KP_SPACE.keycode),
    KP_AT(SDL_Scancode.KP_AT.keycode),
    KP_EXCLAM(SDL_Scancode.KP_EXCLAM.keycode),
    KP_MEMSTORE(SDL_Scancode.KP_MEMSTORE.keycode),
    KP_MEMRECALL(SDL_Scancode.KP_MEMRECALL.keycode),
    KP_MEMCLEAR(SDL_Scancode.KP_MEMCLEAR.keycode),
    KP_MEMADD(SDL_Scancode.KP_MEMADD.keycode),
    KP_MEMSUBTRACT(SDL_Scancode.KP_MEMSUBTRACT.keycode),
    KP_MEMMULTIPLY(SDL_Scancode.KP_MEMMULTIPLY.keycode),
    KP_MEMDIVIDE(SDL_Scancode.KP_MEMDIVIDE.keycode),
    KP_PLUSMINUS(SDL_Scancode.KP_PLUSMINUS.keycode),
    KP_CLEAR(SDL_Scancode.KP_CLEAR.keycode),
    KP_CLEARENTRY(SDL_Scancode.KP_CLEARENTRY.keycode),
    KP_BINARY(SDL_Scancode.KP_BINARY.keycode),
    KP_OCTAL(SDL_Scancode.KP_OCTAL.keycode),
    KP_DECIMAL(SDL_Scancode.KP_DECIMAL.keycode),
    KP_HEXADECIMAL(SDL_Scancode.KP_HEXADECIMAL.keycode),

    LCTRL(SDL_Scancode.LCTRL.keycode),
    LSHIFT(SDL_Scancode.LSHIFT.keycode),
    LALT(SDL_Scancode.LALT.keycode),
    LGUI(SDL_Scancode.LGUI.keycode),
    RCTRL(SDL_Scancode.RCTRL.keycode),
    RSHIFT(SDL_Scancode.RSHIFT.keycode),
    RALT(SDL_Scancode.RALT.keycode),
    RGUI(SDL_Scancode.RGUI.keycode),

    MODE(SDL_Scancode.MODE.keycode),

    AUDIONEXT(SDL_Scancode.AUDIONEXT.keycode),
    AUDIOPREV(SDL_Scancode.AUDIOPREV.keycode),
    AUDIOSTOP(SDL_Scancode.AUDIOSTOP.keycode),
    AUDIOPLAY(SDL_Scancode.AUDIOPLAY.keycode),
    AUDIOMUTE(SDL_Scancode.AUDIOMUTE.keycode),
    MEDIASELECT(SDL_Scancode.MEDIASELECT.keycode),
    WWW(SDL_Scancode.WWW.keycode),
    MAIL(SDL_Scancode.MAIL.keycode),
    CALCULATOR(SDL_Scancode.CALCULATOR.keycode),
    COMPUTER(SDL_Scancode.COMPUTER.keycode),
    AC_SEARCH(SDL_Scancode.AC_SEARCH.keycode),
    AC_HOME(SDL_Scancode.AC_HOME.keycode),
    AC_BACK(SDL_Scancode.AC_BACK.keycode),
    AC_FORWARD(SDL_Scancode.AC_FORWARD.keycode),
    AC_STOP(SDL_Scancode.AC_STOP.keycode),
    AC_REFRESH(SDL_Scancode.AC_REFRESH.keycode),
    AC_BOOKMARKS(SDL_Scancode.AC_BOOKMARKS.keycode),

    BRIGHTNESSDOWN(SDL_Scancode.BRIGHTNESSDOWN.keycode),
    BRIGHTNESSUP(SDL_Scancode.BRIGHTNESSUP.keycode),
    DISPLAYSWITCH(SDL_Scancode.DISPLAYSWITCH.keycode),
    KBDILLUMTOGGLE(SDL_Scancode.KBDILLUMTOGGLE.keycode),
    KBDILLUMDOWN(SDL_Scancode.KBDILLUMDOWN.keycode),
    KBDILLUMUP(SDL_Scancode.KBDILLUMUP.keycode),
    EJECT(SDL_Scancode.EJECT.keycode),
    SLEEP(SDL_Scancode.SLEEP.keycode),
    APP1(SDL_Scancode.APP1.keycode),
    APP2(SDL_Scancode.APP2.keycode),

    AUDIOREWIND(SDL_Scancode.AUDIOREWIND.keycode),
    AUDIOFASTFORWARD(SDL_Scancode.AUDIOFASTFORWARD.keycode);

    companion object {
        private val lookup = mutableMapOf<Int, SDL_KeyCode>()

        init {
            values().forEach { lookup[it.value] = it }
        }

        fun fromInt(value: Int): SDL_KeyCode = lookup[value] ?: UNKNOWN
    }
}
